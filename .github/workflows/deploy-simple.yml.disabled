name: Deploy without Docker

on:
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types:
      - completed
    branches: [main, master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: bot-build
        path: ./deploy
        
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          # Переходим в директорию проекта
          cd /opt/feedback-bot
          
          # Останавливаем текущий процесс
          pm2 stop feedback-bot || true
          
          # Очищаем старые файлы
          rm -rf dist/ package*.json
          
          # Показываем статус
          pm2 status
          
    - name: Copy files and restart
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        source: "./deploy/*"
        target: "/opt/feedback-bot/"
        
    - name: Install dependencies and start
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          # Переходим в директорию проекта
          cd /opt/feedback-bot
          
          # Устанавливаем зависимости
          npm install --production
          
          # Запускаем с PM2
          pm2 start ecosystem.config.js
          
          # Сохраняем конфигурацию PM2
          pm2 save
          
          # Показываем статус
          pm2 status
          
          # Показываем логи
          pm2 logs feedback-bot --lines 20
